# apiVersion: apiextensions.k8s.io/v1
# kind: CustomResourceDefinition
# metadata:
#   annotations:
#     controller-gen.kubebuilder.io/version: v0.11.3
#   creationTimestamp: null
#   name: controlplanes.tenancy.kflex.kubestellar.org
# spec:
#   group: tenancy.kflex.kubestellar.org
#   names:
#     kind: ControlPlane
#     listKind: ControlPlaneList
#     plural: controlplanes
#     shortNames:
#     - cp
#     - cps
#     singular: controlplane
#   scope: Cluster
#   versions:
#   - additionalPrinterColumns:
#     - jsonPath: .status.conditions[?(@.type=='Synced')].status
#       name: SYNCED
#       type: string
#     - jsonPath: .status.conditions[?(@.type=='Ready')].status
#       name: READY
#       type: string
#     - jsonPath: .spec.type
#       name: TYPE
#       type: string
#     - jsonPath: .metadata.creationTimestamp
#       name: AGE
#       type: date
#     name: v1alpha1
#     schema:
#       openAPIV3Schema:
#         description: ControlPlane is the Schema for the controlplanes API
#         properties:
#           apiVersion:
#             description: 'APIVersion defines the versioned schema of this representation
#               of an object. Servers should convert recognized schemas to the latest
#               internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
#             type: string
#           kind:
#             description: 'Kind is a string value representing the REST resource this
#               object represents. Servers may infer this from the endpoint the client
#               submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
#             type: string
#           metadata:
#             type: object
#           spec:
#             description: ControlPlaneSpec defines the desired state of ControlPlane
#             properties:
#               backend:
#                 enum:
#                 - shared
#                 - dedicated
#                 type: string
#               postCreateHook:
#                 type: string
#               type:
#                 enum:
#                 - k8s
#                 - ocm
#                 - vcluster
#                 - host
#                 type: string
#             type: object
#           status:
#             description: ControlPlaneStatus defines the observed state of ControlPlane
#             properties:
#               conditions:
#                 items:
#                   description: ControlPlaneCondition describes the state of a control
#                     plane at a certain point.
#                   properties:
#                     lastTransitionTime:
#                       format: date-time
#                       type: string
#                     lastUpdateTime:
#                       format: date-time
#                       type: string
#                     message:
#                       type: string
#                     reason:
#                       type: string
#                     status:
#                       type: string
#                     type:
#                       type: string
#                   required:
#                   - lastTransitionTime
#                   - lastUpdateTime
#                   - message
#                   - reason
#                   - status
#                   - type
#                   type: object
#                 type: array
#               observedGeneration:
#                 format: int64
#                 type: integer
#               postCreateHooks:
#                 additionalProperties:
#                   type: boolean
#                 type: object
#               secretRef:
#                 description: SecretRef contains a referece to the secret containing
#                   the Kubeconfig for the control plane
#                 properties:
#                   inClusterKey:
#                     description: Required
#                     type: string
#                   key:
#                     description: Required
#                     type: string
#                   name:
#                     description: '`name` is the name of the secret. Required'
#                     type: string
#                   namespace:
#                     description: '`namespace` is the namespace of the secret. Required'
#                     type: string
#                 required:
#                 - inClusterKey
#                 - key
#                 - name
#                 - namespace
#                 type: object
#             required:
#             - conditions
#             - observedGeneration
#             type: object
#         type: object
#     served: true
#     storage: true
#     subresources:
#       status: {}
# ---
# apiVersion: apiextensions.k8s.io/v1
# kind: CustomResourceDefinition
# metadata:
#   annotations:
#     controller-gen.kubebuilder.io/version: v0.11.3
#   creationTimestamp: null
#   name: postcreatehooks.tenancy.kflex.kubestellar.org
# spec:
#   group: tenancy.kflex.kubestellar.org
#   names:
#     kind: PostCreateHook
#     listKind: PostCreateHookList
#     plural: postcreatehooks
#     shortNames:
#     - pch
#     - pchs
#     singular: postcreatehook
#   scope: Cluster
#   versions:
#   - additionalPrinterColumns:
#     - jsonPath: .status.conditions[?(@.type=='Synced')].status
#       name: SYNCED
#       type: string
#     - jsonPath: .status.conditions[?(@.type=='Ready')].status
#       name: READY
#       type: string
#     - jsonPath: .spec.type
#       name: TYPE
#       type: string
#     - jsonPath: .metadata.creationTimestamp
#       name: AGE
#       type: date
#     name: v1alpha1
#     schema:
#       openAPIV3Schema:
#         description: PostCreateHook is the Schema for the controlplanes API
#         properties:
#           apiVersion:
#             description: 'APIVersion defines the versioned schema of this representation
#               of an object. Servers should convert recognized schemas to the latest
#               internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
#             type: string
#           kind:
#             description: 'Kind is a string value representing the REST resource this
#               object represents. Servers may infer this from the endpoint the client
#               submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
#             type: string
#           metadata:
#             type: object
#           spec:
#             description: PostCreateHookSpec defines the desired state of PostCreateHook
#             properties:
#               templates:
#                 items:
#                   description: Manifest represents a resource to be deployed
#                   type: object
#                   x-kubernetes-embedded-resource: true
#                   x-kubernetes-preserve-unknown-fields: true
#                 type: array
#             type: object
#           status:
#             description: PostCreateHookStatus defines the observed state of PostCreateHook
#             properties:
#               conditions:
#                 items:
#                   description: ControlPlaneCondition describes the state of a control
#                     plane at a certain point.
#                   properties:
#                     lastTransitionTime:
#                       format: date-time
#                       type: string
#                     lastUpdateTime:
#                       format: date-time
#                       type: string
#                     message:
#                       type: string
#                     reason:
#                       type: string
#                     status:
#                       type: string
#                     type:
#                       type: string
#                   required:
#                   - lastTransitionTime
#                   - lastUpdateTime
#                   - message
#                   - reason
#                   - status
#                   - type
#                   type: object
#                 type: array
#               observedGeneration:
#                 format: int64
#                 type: integer
#               secretRef:
#                 description: SecretRef contains a referece to the secret containing
#                   the Kubeconfig for the control plane
#                 properties:
#                   inClusterKey:
#                     description: Required
#                     type: string
#                   key:
#                     description: Required
#                     type: string
#                   name:
#                     description: '`name` is the name of the secret. Required'
#                     type: string
#                   namespace:
#                     description: '`namespace` is the namespace of the secret. Required'
#                     type: string
#                 required:
#                 - inClusterKey
#                 - key
#                 - name
#                 - namespace
#                 type: object
#             required:
#             - conditions
#             - observedGeneration
#             type: object
#         type: object
#     served: true
#     storage: true
#     subresources:
#       status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: kubeflex
  name: kubeflex-controller-manager
  namespace: kubeflex-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: kubeflex
  name: kubeflex-leader-election-role
  namespace: kubeflex-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubeflex-manager-role
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints/restricted
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/attach
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/portforward
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - services
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenancy.kflex.kubestellar.org
  resources:
  - controlplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenancy.kflex.kubestellar.org
  resources:
  - controlplanes/finalizers
  verbs:
  - update
- apiGroups:
  - tenancy.kflex.kubestellar.org
  resources:
  - controlplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tenancy.kflex.kubestellar.org
  resources:
  - postcreatehooks
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kubeflex
  name: kubeflex-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kubeflex
  name: kubeflex-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: kubeflex
  name: kubeflex-leader-election-rolebinding
  namespace: kubeflex-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeflex-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubeflex-controller-manager
  namespace: kubeflex-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: kubeflex
  name: kubeflex-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeflex-manager-role
subjects:
- kind: ServiceAccount
  name: kubeflex-controller-manager
  namespace: kubeflex-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: kubeflex
  name: kubeflex-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeflex-proxy-role
subjects:
- kind: ServiceAccount
  name: kubeflex-controller-manager
  namespace: kubeflex-system
---
apiVersion: v1
data:
  domain: '{{ .Values.domain }}'
  externalPort: '{{ .Values.externalPort }}'
  isOpenShift: '{{ .Values.isOpenShift }}'
kind: ConfigMap
metadata:
  name: kubeflex-config
  namespace: kubeflex-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: kubeflex
    control-plane: controller-manager
  name: kubeflex-controller-manager-metrics-service
  namespace: kubeflex-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kubeflex
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: kubeflex
    control-plane: controller-manager
  name: kubeflex-controller-manager
  namespace: kubeflex-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        image: ghcr.io/kubestellar/kubeflex/manager:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubeflex-controller-manager
      terminationGracePeriodSeconds: 10
