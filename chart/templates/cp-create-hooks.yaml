{{- if .Values.cp }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kflex-cp-role
rules:
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - create
    - delete
  - apiGroups:
    - ""
    resources:
    - secrets
    - services
    - serviceaccounts
    - configmaps
    verbs:
    - get
    - create
    - list
    - update
    - delete
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - get
    - create
    - list
    - update
    - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kflex-cp-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kflex-cp-role
subjects:
- kind: ServiceAccount
  name: kflex-cp-sa
  namespace: kubeflex-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kflex-cp-sa
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-cp-create"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install # post ==> SA must exist first
    # "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation # , hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never # OnFailure
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kflex-cp-sa
      containers:
      - name: cp-create
        image: quay.io/kubestellar/kflex:0.4.2
        args:
          - create
          - cp1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
# ---
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: "{{ .Release.Name }}-uninstall-postgresql"
#   labels:
#     app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
#     app.kubernetes.io/instance: {{ .Release.Name | quote }}
#     app.kubernetes.io/version: {{ .Chart.AppVersion }}
#     helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
#   annotations:
#     # This is what defines this resource as a hook. Without this line, the
#     # job is considered part of the release.
#     "helm.sh/hook": pre-delete # pre ==> need the SA to exists
#     # "helm.sh/hook-weight": "-5"
#     "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
# spec:
#   template:
#     metadata:
#       name: "{{ .Release.Name }}"
#       labels:
#         app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
#         app.kubernetes.io/instance: {{ .Release.Name | quote }}
#         helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
#     spec:
#       restartPolicy: Never # OnFailure
#       securityContext:
#         runAsNonRoot: true
#       serviceAccountName: kflex-cp-sa
#       containers:
#       - name: uninstall-postgresql
#         image: quay.io/kubestellar/helm:3.14.0
#         args:
#           - uninstall
#           - postgres
#           - --namespace
#           - kubeflex-system
#         env:
#         - name: HELM_CONFIG_HOME
#           value: "/tmp"
#         - name: HELM_CACHE_HOME
#           value: "/tmp"
#         securityContext:
#           allowPrivilegeEscalation: false
#           capabilities:
#             drop:
#             - ALL
{{- end }}
